---
import { Icon } from '@astrojs/starlight/components'

const { owner, repo } = Astro.props
---

<a
  href={`https://github.com/${owner}/${repo}`}
  class="sl-flex stars">
  <Icon name="star" />
  <gh-stars
    data-owner={owner}
    data-repo={repo}>
    <span id="star-count">many</span>
  </gh-stars>
</a>

<style>
  .stars {
    align-items: center;
    gap: 0.25rem;
    text-decoration: none;
  }

  /* Copied from the `SocialIcons` component. */
  a {
    color: var(--sl-color-text-accent);
    padding: 0.5em;
    margin: -0.5em;
  }
  a:hover {
    opacity: 0.66;
  }
</style>

<script>
  class GhStars extends HTMLElement {
    constructor() {
      super()

      const approximate = (count: number) => {
        if (count >= 1000) {
          // Show numbers over 1000 as x.yk. So 1234 becomes 1.2k.
          const mag = Math.trunc(count / 100) / 10
          return `${mag}k+`
        } else {
          // Show numbers below 1000 as xy0+. So 789 becomes 780.
          const mag = Math.trunc(count / 10) * 10
          return `${mag}+`
        }
      }

      const { owner, repo } = this.dataset
      fetch(`https://api.github.com/repos/${owner}/${repo}`)
        .then((res) => {
          if (res.ok) {
            return res.json()
          } else {
            throw new Error('Network response was not OK.')
          }
        })
        .then((data) => {
          const elem = this.querySelector('#star-count')
          if (elem) elem.textContent = approximate(data.stargazers_count)
        })
        .catch((err) => void err)
    }
  }

  customElements.define('gh-stars', GhStars)
</script>
